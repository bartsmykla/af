name: "Release"

on:
  push:
    branches: ["master"]
  workflow_dispatch: {}

permissions:
  contents: read

env:
  PROJECT_NAME: af
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ matrix.runner }}

    env:
      OPENSSL_DIR: ${{ matrix.env.OPENSSL_DIR }}

    strategy:
      fail-fast: false

      matrix:
        include:
        - name: "macos-arm64"
          runner: macos-15
          target: aarch64-apple-darwin
          env:
            OPENSSL_DIR: /opt/homebrew/opt/openssl
        - name: "macos-amd64"
          runner: macOS-13
          target: x86_64-apple-darwin
          env:
            OPENSSL_DIR: /usr/local/opt/openssl

    steps:
    - name: "Checkout"
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    - name: "Install Rust"
      uses: dtolnay/rust-toolchain@888c2e1ea69ab0d4330cbf0af1ecc7b68f368cc1 # v1
      with:
        targets: ${{ matrix.target }}
        toolchain: nightly

    - name: "Setup Cache"
      uses: Swatinem/rust-cache@9d47c6ad4b02e050fd481d890b2ea34778fd09d6 # v2.7.8

    - name: "Build macOS Binary"
      if: contains(matrix.target, 'darwin')
      run: |
        cargo +nightly build -Z unstable-options \
          --artifact-dir dist \
          --target ${{ matrix.target }} \
          --verbose \
          --locked \
          --release

    - name: "Add Arch Suffix to Binary"
      if: contains(matrix.target, 'darwin')
      id: add-suffix
      env:
        MATRIX_NAME: ${{ matrix.name }}
        BASE_PATH: dist/${{ env.PROJECT_NAME }}
      run: |
        final_path="$BASE_PATH-${MATRIX_NAME##*-}"
        echo "binary_path=$final_path" >> "$GITHUB_OUTPUT"
        
        mv "$BASE_PATH" "$final_path"

    - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      if: success()
      with:
        name: ${{ matrix.name }}
        path: ${{ steps.add-suffix.outputs.binary_path }}

    ###########################################################################
    #                                  DEBUG                                  #
    ###########################################################################

    - name: "Initialize Debug Shell"
      if: vars.FORCE_DEBUG_SHELL == 'true' || failure() && runner.debug == '1'
      env:
        TUNSHELL_SECRET: ${{ secrets.TUNSHELL_SECRET }}
      run: .github/scripts/debug-shell.bash

  release:
    runs-on: ubuntu-24.04

    needs: build

    steps:
    - name: "Checkout"
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        fetch-depth: 0
        persist-credentials: false

    - name: "Generate GitHub App Token"
      id: github-app-token
      uses: actions/create-github-app-token@af35edadc00be37caa72ed9f3e6d5f7801bfdf09 # v1.11.7
      with:
        app-id: ${{ secrets.APP_ID }}
        private-key: ${{ secrets.APP_PRIVATE_KEY }}

    - name: "Calculate the Next Version"
      id: next-version
      uses: mathieudutour/github-tag-action@a22cf08638b34d5badda920f9daf6e72c477b07b # v6.2
      with:
        github_token: ${{ steps.github-app-token.outputs.token }}
        dry_run: true

    - name: "Configure Git Commiter"
      run: |
        git config --local user.email "1196749+afek-bot[bot]@users.noreply.github.com"
        git config --local user.name "afek-bot[bot]"

    - name: "Install Cargo V" # tool to update versions in Cargo.toml and Cargo.lock
      run: cargo install cargo-v

    - name: "Bump Version"
      run: cargo v --yes "${{ steps.next-version.outputs.new_version }}"

    - name: "Push Commit and Tag with New Version"
      uses: ad-m/github-push-action@77c5b412c50b723d2a4fbc6d71fb5723bcd439aa # master
      with:
        github_token: ${{ steps.github-app-token.outputs.token }}
        branch: ${{ github.ref }}
        tags: true

    - name: "Get macos-arm64 Binary"
      id: macos-arm64
      uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # v4.2.1
      with:
        name: macos-arm64

    - name: "Get macos-amd64 Binary"
      id: macos-amd64
      uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # v4.2.1
      with:
        name: macos-amd64

    - name: "Create a GitHub Release"
      uses: softprops/action-gh-release@v2
      with:
        token: ${{ steps.github-app-token.outputs.token }}
        tag_name: ${{ steps.next-version.outputs.new_tag }}
        make_latest: true
        generate_release_notes: true
        files: |
          ${{ steps.macos-arm64.outputs.download-path }}
          ${{ steps.macos-amd64.outputs.download-path }}

    ###########################################################################
    #                                  DEBUG                                  #
    ###########################################################################

    - name: "Debug"
      run: |
        echo "new_tag: ${{ steps.next-version.outputs.new_tag }}"
        echo "new_version: ${{ steps.next-version.outputs.new_version }}"
        echo "previous_tag: ${{ steps.next-version.outputs.previous_tag }}"
        echo "previous_version: ${{ steps.next-version.outputs.previous_version }}"
        echo "release_type: ${{ steps.next-version.outputs.release_type }}"
        echo "changelog: ${{ steps.next-version.outputs.changelog }}"
